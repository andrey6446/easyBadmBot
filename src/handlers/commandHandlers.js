import { InlineKeyboard } from 'grammy';
import { userCalendarState } from '../store/userState.js'
import { generateNotificationsKeyboard } from '../services/notificationService.js';

export const setupCommandHandlers = (bot) => {
  bot.command('start', (ctx) => {
    ctx.reply('–ü—Ä–∏–≤–µ—Ç üëã \n–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –±–∞–¥–º–∏–Ω—Ç–æ–Ω—É –≤ –ê–ª–µ–∫—Å–µ–µ–≤–∞!');
  });

  bot.command("calendar", async (ctx) => {
    const userId = ctx.from.id;
    userCalendarState.set(userId, {
      year: new Date().getFullYear(),
      month: new Date().getMonth()
    });

    const keyboard = new InlineKeyboard()
      .row({ text: "–õ—é–±–æ–µ –≤—Ä–µ–º—è", callback_data: "time_any" })
      .row({ text: "–£–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è", callback_data: "time_custom" });

    await ctx.reply(
      '–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã:\n\n' +
      '–ù–∞–∂–º–∏—Ç–µ "–õ—é–±–æ–µ –≤—Ä–µ–º—è" –∏–ª–∏ "–£–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è" –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞',
      { reply_markup: keyboard }
    );
  });

  bot.command('notifications', async (ctx) => {
    const telegramId = ctx.from.id;
    const keyboard = await generateNotificationsKeyboard(telegramId);

    await ctx.reply(
      '–í–∞—à–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∫–æ—Ä—Ç–∞—Ö:\n\n' +
      '–í—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ.',
      { reply_markup: keyboard }
    );
  });

  bot.command('help', async (ctx) => {
    await ctx.reply('–ü–æ–º–æ—â–∏ –Ω–µ –∂–¥–∏—Ç–µ üò≠ \n [–ê–Ω–¥—Ä–µ–π](https://t.me/this_object)', {
      parse_mode: 'MarkdownV2'
    });
  });

};